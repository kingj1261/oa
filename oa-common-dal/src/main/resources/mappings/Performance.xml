<?xml version="1.0" encoding="UTF-8" ?> 

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
  
<mapper namespace="Performance">

    <!-- 查询当前部门下所有车辆销售记录 -->
    <select id="findAllSaleOrders" resultType="com.wantai.oa.common.dal.mappings.dos.performance.SaleOrderDo">
        <![CDATA[
            select
                  orders.customer_id customerId,
                  users.depart_id departId,
                  '${bizItem}' bizItem,
                  '${bizEvent}' bizEvent,
                  COALESCE(sum(orders.sale_count),0) saleCounts
           from m_c_sale_order orders,(
                           select id,depart_id from m_b_user where depart_id in (
                             SELECT DISTINCT user.depart_id
                             FROM
                               m_b_role role,
                               m_b_user_role userRole,
                               m_b_user user
                             WHERE role.id = userRole.role_id
                                   AND role.jm = #{role}
                                   AND user.id = userRole.user_id
                           )
                         )users
                 where orders.order_status=(
                   select max(status) from m_menu where menu_jm='ZCXSWJ'
                   group by menu_jm
                 )
                 and orders.company_code=#{companyCode}
                 and orders.company_id=#{companyId}
                 and orders.customer_id=users.id
                 and orders.operate_person_1=users.id
                 AND FROM_UNIXTIME(orders.create_time)>=DATE_SUB(CURRENT_DATE, INTERVAL DAYOFMONTH(CURRENT_DATE)-1 DAY)
                 AND FROM_UNIXTIME(orders.create_time)<=LAST_DAY(CURRENT_DATE)
                 group by orders.customer_id
        ]]>
    </select>

    
    <resultMap id="performanceConfig" type="com.wantai.oa.common.dal.mappings.dos.performance.PerformanceDo" extends="Common.commonResultMap">
        <result property="customerId"   column="customer_id" javaType="string" jdbcType="VARCHAR"/>
        <result property="startTime"   column="start_time" javaType="date" jdbcType="DATE"/>
        <result property="endTime" column="end_time" javaType="date" jdbcType="DATE"/>
        <result property="basicSalary" column="basic_salary" javaType="double" jdbcType="DECIMAL"/>
        <result property="starSalary" column="start_salary" javaType="double" jdbcType="DECIMAL"/>
        <result property="lowestSalary" column="lowest_salary" javaType="double" jdbcType="DECIMAL"/>
        <result property="workYearsSalary" column="work_years_salary" javaType="double" jdbcType="DECIMAL"/>
        <result property="maxWorkYearsSalary" column="max_work_years_salary" javaType="double" jdbcType="DECIMAL"/>
        <result property="betAmount" column="bet_amount" javaType="double" jdbcType="DECIMAL"/>
        <result property="currency" column="currency" javaType="string" jdbcType="VARCHAR"/>
        <result property="socialBasicAmount" column="social_basic_amount" javaType="double" jdbcType="DECIMAL"/>
        <result property="socialPercent" column="social_percent" javaType="double" jdbcType="DECIMAL"/>
        <result property="fundBasicAmount" column="fund_basic_amount" javaType="double" jdbcType="DECIMAL"/>
        <result property="fundPercent" column="fund_percent" javaType="double" jdbcType="DECIMAL"/>
    </resultMap>

    <!-- 查询绩效设置 -->
    <select id="queryPerformanceConfig" resultMap="performanceConfig">
         select
            id                  ,
            company_code        ,
            company_id          ,
            customer_id         ,
            start_time          ,
            end_time            ,
            basic_salary        ,
            start_salary        ,
            lowest_salary       ,
            work_years_salary   ,
            max_work_years_salary,
            bet_amount          ,
            currency            ,
            social_basic_amount ,
            social_percent      ,
            fund_basic_amount   ,
            fund_percent        ,
            memo                ,
            gmt_create          ,
            gmt_modified        ,
            operator            ,
            last_modified_oeprator
         from OA_CUSTOM_PERFORMANCE_CONFIG
         where  customer_id=#{customerId}
         and    company_code=#{companyCode}
         and    company_id=#{companyId}
    </select>


    <!-- 删除用户绩效配置 -->
    <delete id="deleteUserPerformance">
        delete from  OA_CUSTOM_PERFORMANCE_CONFIG where id=#{id}
    </delete>

    <!-- 新增用户绩效配置 -->
    <insert id="addUserPerformance" parameterType="com.wantai.oa.common.dal.mappings.dos.performance.PerformanceDo">
       insert into OA_CUSTOM_PERFORMANCE_CONFIG
       (
            company_code            ,
            company_id              ,
            customer_id             ,
            start_time              ,
            end_time                ,
            basic_salary            ,
            start_salary            ,
            lowest_salary           ,
            work_years_salary       ,
            max_work_years_salary   ,
            bet_amount              ,
            currency                ,
            social_basic_amount     ,
            social_percent          ,
            fund_basic_amount       ,
            fund_percent            ,
            memo                    ,
            gmt_create              ,
            gmt_modified            ,
            operator                ,
            last_modified_oeprator
       )
       VALUES
       (
            #{companyCode},
            #{companyId},
            #{customerId},
            now(),
            now(),
            #{basicSalary},
            #{starSalary},
            #{lowestSalary},
            #{workYearsSalary},
            #{maxWorkYearsSalary},
            #{betAmount},
            #{currency},
            #{socialBasicAmount},
            #{socialPercent},
            #{fundBasicAmount},
            #{fundPercent},
            '',
            now(),
            now(),
            #{operator},
            #{lastModifiedOperator}
       )
    </insert>

</mapper>